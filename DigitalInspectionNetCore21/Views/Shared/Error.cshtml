@model ErrorViewModel
@{
	ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
	<p>
		<strong>Request ID:</strong> <code>@Model.RequestId</code>
	</p>
}

<h3>Development Mode</h3>
<p>
	Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
</p>
<p>
	<strong>Development environment should not be enabled in deployed applications</strong>, as it can result in sensitive information from exceptions being displayed to end users. For local debugging, development environment can be enabled by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>, and restarting the application.
</p>


@*@model DigitalInspection.ViewModels.Base.BaseErrorModel

<style>
	.search-found {
		font-weight: bold;
		color: red;
		font-size: 16px;
	}
</style>

<h2>Stack trace</h2>
<pre><code>@Model.StackTrace</code></pre>

<script>
	var searchedText = 'DigitalInspection';
	var replaceText = 'Digital-Inspection';
	var selector = "code:contains('" + searchedText + "')";
	var jqElement = $(selector);

	while (jqElement.length > 0) {
		jqElement.each(function (i, element) {
			var content = $(element).text();
			content = content.replace(searchedText, '<span class="search-found">' + replaceText + '</span>');
			$(element).html(content);
		});

		jqElement = $(selector);
	}


</script>*@
